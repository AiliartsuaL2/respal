plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.hckst'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//ConfigurationProperties
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// spring-data-jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// mysql
	implementation 'mysql:mysql-connector-java:8.0.28'

	// h2
	testImplementation 'com.h2database:h2'

	// email
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//@valid
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// WebClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	//netty IOS
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

	// // QueryDSL
	implementation "com.querydsl:querydsl-jpa"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정

	annotationProcessor("jakarta.persistence:jakarta.persistence-api")
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")

	// swagger
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.13'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-security', version: '1.6.13'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.security:spring-security-test'

	// jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// oauth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// https://mvnrepository.com/artifact/org.json/json
	implementation group: 'org.json', name: 'json', version: '20230227'

	implementation 'com.google.code.gson:gson:2.9.0'

	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// aws s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//r2dbc
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'io.asyncer:r2dbc-mysql:0.9.5'
}

tasks.named('test') {
	useJUnitPlatform()
}

// submodule > application-prod.yml 설정
task copyPrivate(type: Copy) {
	copy {
		from './respal-private'
		include "application-prod.yml"
		into 'src/main/resources'
	}
}

// QueryDSL
def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}
// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}
